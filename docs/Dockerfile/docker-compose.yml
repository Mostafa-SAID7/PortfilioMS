version: '3.8'

services:
  portfolio-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: portfolio-website
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8081:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=portfolio-db;Database=PortfolioDB;User Id=sa;Password=${DB_PASSWORD:-YourStrong@Password123};TrustServerCertificate=true;
      - EmailSettings__SmtpServer=smtp.gmail.com
      - EmailSettings__Port=587
      - EmailSettings__SenderName=Portfolio Website
      - EmailSettings__SenderEmail=${EMAIL_USERNAME}
      - EmailSettings__Password=${EMAIL_PASSWORD}
    volumes:
      - portfolio_images:/app/wwwroot/images/uploads
      - portfolio_documents:/app/wwwroot/documents
      - portfolio_data:/app/Data
    depends_on:
      - portfolio-db
    networks:
      - portfolio-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portfolio.rule=Host(`portfolio.local`)"
      - "traefik.http.services.portfolio.loadbalancer.server.port=80"

  portfolio-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: portfolio-database
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_PASSWORD:-YourStrong@Password123}
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - portfolio_db_data:/var/opt/mssql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - portfolio-network
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd", "-U", "sa", "-P", "${DB_PASSWORD:-YourStrong@Password123}", "-Q", "SELECT 1" ]
      timeout: 5s
      retries: 10
      start_period: 30s

  portfolio-redis:
    image: redis:7-alpine
    container_name: portfolio-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - portfolio_redis_data:/data
    networks:
      - portfolio-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-YourRedisPassword123}
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      timeout: 3s
      retries: 5

  portfolio-proxy:
    image: nginx:alpine
    container_name: portfolio-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - portfolio-web
    networks:
      - portfolio-network

  portfolio-traefik:
    image: traefik:v2.10
    container_name: portfolio-traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml
      - ./ssl:/etc/traefik/ssl
    networks:
      - portfolio-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.portfolio.local`)"
      - "traefik.http.routers.dashboard.service=api@internal"

volumes:
  portfolio_db_data:
    driver: local
  portfolio_redis_data:
    driver: local
  portfolio_images:
    driver: local
  portfolio_documents:
    driver: local
  portfolio_data:
    driver: local

networks:
  portfolio-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16